// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: crontab/crontab.proto

package crontab

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Domain int32

const (
	Domain_UnknownDomain Domain = 0
	Domain_BILI          Domain = 101
	Domain_HPI           Domain = 201
	Domain_STG           Domain = 301
	Domain_V2EX          Domain = 401
	Domain_Evo           Domain = 501
)

// Enum value maps for Domain.
var (
	Domain_name = map[int32]string{
		0:   "UnknownDomain",
		101: "BILI",
		201: "HPI",
		301: "STG",
		401: "V2EX",
		501: "Evo",
	}
	Domain_value = map[string]int32{
		"UnknownDomain": 0,
		"BILI":          101,
		"HPI":           201,
		"STG":           301,
		"V2EX":          401,
		"Evo":           501,
	}
)

func (x Domain) Enum() *Domain {
	p := new(Domain)
	*p = x
	return p
}

func (x Domain) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Domain) Descriptor() protoreflect.EnumDescriptor {
	return file_crontab_crontab_proto_enumTypes[0].Descriptor()
}

func (Domain) Type() protoreflect.EnumType {
	return &file_crontab_crontab_proto_enumTypes[0]
}

func (x Domain) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Domain.Descriptor instead.
func (Domain) EnumDescriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{0}
}

type Kind int32

const (
	Kind_UnknownKind Kind = 0
	// bili
	Kind_BILISignIn Kind = 102
	Kind_BILIBCount Kind = 103
	// 黑客派
	Kind_HPISign Kind = 202
	// Go语言中文网
	Kind_STGSign Kind = 302
	// V2ex
	Kind_V2EXSign Kind = 402
	// Evolution X
	Kind_Raphael Kind = 502
)

// Enum value maps for Kind.
var (
	Kind_name = map[int32]string{
		0:   "UnknownKind",
		102: "BILISignIn",
		103: "BILIBCount",
		202: "HPISign",
		302: "STGSign",
		402: "V2EXSign",
		502: "Raphael",
	}
	Kind_value = map[string]int32{
		"UnknownKind": 0,
		"BILISignIn":  102,
		"BILIBCount":  103,
		"HPISign":     202,
		"STGSign":     302,
		"V2EXSign":    402,
		"Raphael":     502,
	}
)

func (x Kind) Enum() *Kind {
	p := new(Kind)
	*p = x
	return p
}

func (x Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_crontab_crontab_proto_enumTypes[1].Descriptor()
}

func (Kind) Type() protoreflect.EnumType {
	return &file_crontab_crontab_proto_enumTypes[1]
}

func (x Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Kind.Descriptor instead.
func (Kind) EnumDescriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{1}
}

type Stage int32

const (
	Stage_UnknownStage Stage = 0
	Stage_Auth         Stage = 1
	Stage_SignIn       Stage = 2
	Stage_Query        Stage = 3
	Stage_Verify       Stage = 4
)

// Enum value maps for Stage.
var (
	Stage_name = map[int32]string{
		0: "UnknownStage",
		1: "Auth",
		2: "SignIn",
		3: "Query",
		4: "Verify",
	}
	Stage_value = map[string]int32{
		"UnknownStage": 0,
		"Auth":         1,
		"SignIn":       2,
		"Query":        3,
		"Verify":       4,
	}
)

func (x Stage) Enum() *Stage {
	p := new(Stage)
	*p = x
	return p
}

func (x Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_crontab_crontab_proto_enumTypes[2].Descriptor()
}

func (Stage) Type() protoreflect.EnumType {
	return &file_crontab_crontab_proto_enumTypes[2]
}

func (x Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stage.Descriptor instead.
func (Stage) EnumDescriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{2}
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID   int64  `protobuf:"varint,1,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
	UserID   int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Describe string `protobuf:"bytes,3,opt,name=Describe,proto3" json:"Describe,omitempty"`
	Kind     Kind   `protobuf:"varint,4,opt,name=Kind,proto3,enum=Kind" json:"Kind,omitempty"`
	Spec     string `protobuf:"bytes,5,opt,name=Spec,proto3" json:"Spec,omitempty"`
	SecretID int64  `protobuf:"varint,6,opt,name=SecretID,proto3" json:"SecretID,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetTaskID() int64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

func (x *Task) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Task) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *Task) GetKind() Kind {
	if x != nil {
		return x.Kind
	}
	return Kind_UnknownKind
}

func (x *Task) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *Task) GetSecretID() int64 {
	if x != nil {
		return x.SecretID
	}
	return 0
}

type CreateTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Describe string `protobuf:"bytes,2,opt,name=Describe,proto3" json:"Describe,omitempty"`
	Kind     Kind   `protobuf:"varint,3,opt,name=Kind,proto3,enum=Kind" json:"Kind,omitempty"`
	Spec     string `protobuf:"bytes,4,opt,name=Spec,proto3" json:"Spec,omitempty"`
	SecretID int64  `protobuf:"varint,5,opt,name=SecretID,proto3" json:"SecretID,omitempty"`
}

func (x *CreateTaskReq) Reset() {
	*x = CreateTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskReq) ProtoMessage() {}

func (x *CreateTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskReq.ProtoReflect.Descriptor instead.
func (*CreateTaskReq) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CreateTaskReq) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *CreateTaskReq) GetKind() Kind {
	if x != nil {
		return x.Kind
	}
	return Kind_UnknownKind
}

func (x *CreateTaskReq) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *CreateTaskReq) GetSecretID() int64 {
	if x != nil {
		return x.SecretID
	}
	return 0
}

type CreateTaskRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID int64 `protobuf:"varint,1,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *CreateTaskRsp) Reset() {
	*x = CreateTaskRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRsp) ProtoMessage() {}

func (x *CreateTaskRsp) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRsp.ProtoReflect.Descriptor instead.
func (*CreateTaskRsp) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTaskRsp) GetTaskID() int64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

type GetTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetTasksReq) Reset() {
	*x = GetTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksReq) ProtoMessage() {}

func (x *GetTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksReq.ProtoReflect.Descriptor instead.
func (*GetTasksReq) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{3}
}

func (x *GetTasksReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetTasksRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Task `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetTasksRsp) Reset() {
	*x = GetTasksRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRsp) ProtoMessage() {}

func (x *GetTasksRsp) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRsp.ProtoReflect.Descriptor instead.
func (*GetTasksRsp) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{4}
}

func (x *GetTasksRsp) GetList() []*Task {
	if x != nil {
		return x.List
	}
	return nil
}

type DeleteTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID int64 `protobuf:"varint,1,opt,name=TaskID,proto3" json:"TaskID,omitempty"`
}

func (x *DeleteTaskReq) Reset() {
	*x = DeleteTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crontab_crontab_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskReq) ProtoMessage() {}

func (x *DeleteTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_crontab_crontab_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskReq.ProtoReflect.Descriptor instead.
func (*DeleteTaskReq) Descriptor() ([]byte, []int) {
	return file_crontab_crontab_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTaskReq) GetTaskID() int64 {
	if x != nil {
		return x.TaskID
	}
	return 0
}

var File_crontab_crontab_proto protoreflect.FileDescriptor

var file_crontab_crontab_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x4b, 0x69, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x49, 0x44, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x4b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x22, 0x25,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x28, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x2a, 0x4e, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4c, 0x49, 0x10, 0x65, 0x12,
	0x08, 0x0a, 0x03, 0x48, 0x50, 0x49, 0x10, 0xc9, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x54, 0x47,
	0x10, 0xad, 0x02, 0x12, 0x09, 0x0a, 0x04, 0x56, 0x32, 0x45, 0x58, 0x10, 0x91, 0x03, 0x12, 0x08,
	0x0a, 0x03, 0x45, 0x76, 0x6f, 0x10, 0xf5, 0x03, 0x2a, 0x70, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x49, 0x4c, 0x49, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x10,
	0x66, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x49, 0x4c, 0x49, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x10,
	0x67, 0x12, 0x0c, 0x0a, 0x07, 0x48, 0x50, 0x49, 0x53, 0x69, 0x67, 0x6e, 0x10, 0xca, 0x01, 0x12,
	0x0c, 0x0a, 0x07, 0x53, 0x54, 0x47, 0x53, 0x69, 0x67, 0x6e, 0x10, 0xae, 0x02, 0x12, 0x0d, 0x0a,
	0x08, 0x56, 0x32, 0x45, 0x58, 0x53, 0x69, 0x67, 0x6e, 0x10, 0x92, 0x03, 0x12, 0x0c, 0x0a, 0x07,
	0x52, 0x61, 0x70, 0x68, 0x61, 0x65, 0x6c, 0x10, 0xf6, 0x03, 0x2a, 0x46, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x10, 0x04, 0x32, 0x9c, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x0c, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6a, 0x64, 0x78, 0x6a, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x72, 0x6f, 0x6e, 0x74, 0x61, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crontab_crontab_proto_rawDescOnce sync.Once
	file_crontab_crontab_proto_rawDescData = file_crontab_crontab_proto_rawDesc
)

func file_crontab_crontab_proto_rawDescGZIP() []byte {
	file_crontab_crontab_proto_rawDescOnce.Do(func() {
		file_crontab_crontab_proto_rawDescData = protoimpl.X.CompressGZIP(file_crontab_crontab_proto_rawDescData)
	})
	return file_crontab_crontab_proto_rawDescData
}

var file_crontab_crontab_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_crontab_crontab_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_crontab_crontab_proto_goTypes = []interface{}{
	(Domain)(0),           // 0: Domain
	(Kind)(0),             // 1: Kind
	(Stage)(0),            // 2: Stage
	(*Task)(nil),          // 3: Task
	(*CreateTaskReq)(nil), // 4: CreateTaskReq
	(*CreateTaskRsp)(nil), // 5: CreateTaskRsp
	(*GetTasksReq)(nil),   // 6: GetTasksReq
	(*GetTasksRsp)(nil),   // 7: GetTasksRsp
	(*DeleteTaskReq)(nil), // 8: DeleteTaskReq
	(*emptypb.Empty)(nil), // 9: google.protobuf.Empty
}
var file_crontab_crontab_proto_depIdxs = []int32{
	1, // 0: Task.Kind:type_name -> Kind
	1, // 1: CreateTaskReq.Kind:type_name -> Kind
	3, // 2: GetTasksRsp.List:type_name -> Task
	4, // 3: CrontabService.CreateTask:input_type -> CreateTaskReq
	6, // 4: CrontabService.GetTasks:input_type -> GetTasksReq
	8, // 5: CrontabService.DeleteTask:input_type -> DeleteTaskReq
	5, // 6: CrontabService.CreateTask:output_type -> CreateTaskRsp
	7, // 7: CrontabService.GetTasks:output_type -> GetTasksRsp
	9, // 8: CrontabService.DeleteTask:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_crontab_crontab_proto_init() }
func file_crontab_crontab_proto_init() {
	if File_crontab_crontab_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crontab_crontab_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crontab_crontab_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crontab_crontab_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crontab_crontab_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crontab_crontab_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crontab_crontab_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crontab_crontab_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crontab_crontab_proto_goTypes,
		DependencyIndexes: file_crontab_crontab_proto_depIdxs,
		EnumInfos:         file_crontab_crontab_proto_enumTypes,
		MessageInfos:      file_crontab_crontab_proto_msgTypes,
	}.Build()
	File_crontab_crontab_proto = out.File
	file_crontab_crontab_proto_rawDesc = nil
	file_crontab_crontab_proto_goTypes = nil
	file_crontab_crontab_proto_depIdxs = nil
}
